<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd  http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- Autowired -->
	<!-- used to activate annotations in beans already registered in the application 
		context (no matter if they were defined with XML or by package scanning) -->
	<context:annotation-config />
	<!-- scans packages to find and register beans within the application context. -->
	<context:component-scan base-package="com.danielme" />

	<!-- enable @Transactional Annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- @PersistenceUnit annotation -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- classpath*:*.properties -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- data source with c3p0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="${h2.driverClassName}"
		p:jdbcUrl="${h2.url}" p:user="${h2.username}" p:password="${h2.password}"
		p:acquireIncrement="${c3p0.acquire_increment}" p:minPoolSize="${c3p0.min_size}"
		p:maxPoolSize="${c3p0.max_size}" p:maxIdleTime="${c3p0.max_idle_time}"
		p:unreturnedConnectionTimeout="${c3p0.unreturned_connection_timeout}" />

	<!-- Hibernate as JPA vendor -->
	<bean id="jpaAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="${jpa.database}" p:showSql="${jpa.showSql}" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="com.danielme.demo.springjpahib"
		p:jpaVendorAdapter-ref="jpaAdapter">

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.query.cache}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<!--useful for debugging -->
				<prop key="hibernate.generate_statistics">${hibernate.statistics}</prop>
			</props>
		</property>

		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>


	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

</beans>